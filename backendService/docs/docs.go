// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Get the current health status of the WebSocket service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthResponse"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "description": "Upgrade HTTP connection to WebSocket for real-time data streaming",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "websocket"
                ],
                "summary": "WebSocket connection endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "default": "websocket",
                        "description": "Upgrade header",
                        "name": "Upgrade",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Upgrade",
                        "description": "Connection header",
                        "name": "Connection",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "WebSocket key",
                        "name": "Sec-WebSocket-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "13",
                        "description": "WebSocket version",
                        "name": "Sec-WebSocket-Version",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.HealthResponse": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "dashboard"
                    ]
                },
                "clients": {
                    "type": "integer",
                    "example": 5
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "ws"},
	Title:            "Backend WebSocket Service API",
	Description:      "A WebSocket server that bridges Kafka data streams with frontend clients",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
