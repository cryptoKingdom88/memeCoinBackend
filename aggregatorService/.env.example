# Kafka Configuration
KAFKA_BROKERS=localhost:9092
KAFKA_TOPIC=trade-info
KAFKA_CONSUMER_GROUP=aggregator-service

# Redis Configuration - Optimized for performance
REDIS_ADDR=localhost:6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_POOL_SIZE=20  # Increased from 10 to 20 for better concurrency

# Time Windows Configuration (comma-separated)
TIME_WINDOWS=1min,5min,15min,30min,1hour

# Maintenance Configuration
MAINTENANCE_INTERVAL=60s
STALE_THRESHOLD=10s

# Worker Pool Configuration - Optimized for better concurrency
MAX_WORKERS=150           # Increased from 100 to 150 for better parallel processing
MAX_TOKEN_PROCESSORS=1000

# Metrics Configuration
METRICS_ENABLED=true
METRICS_PORT=8080

# Logging Configuration
# LOG_LEVEL options: DEBUG, INFO, WARN, ERROR, FATAL
# WARN is recommended for production to reduce log noise
# Only batch processing completion logs will be shown at INFO level
LOG_LEVEL=WARN

# Performance Tuning Configuration - Optimized for lower latency
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=50ms    # Reduced from 100ms for faster retries
REDIS_PIPELINE_SIZE=200   # Increased from 100 for better batching
REDIS_READ_TIMEOUT=2s     # Reduced from 3s for faster failure detection
REDIS_WRITE_TIMEOUT=2s    # Reduced from 3s for faster failure detection
REDIS_IDLE_TIMEOUT=10m    # Increased from 5m to reduce reconnections
REDIS_MAX_CONN_AGE=60m    # Increased from 30m to reduce reconnections

# Memory Optimization - Reduced GC pressure
GC_TARGET_PERCENTAGE=150  # Increased from 100 to reduce GC frequency
MEMORY_LIMIT_MB=1024      # Increased from 512MB for better performance
TRADE_BUFFER_SIZE=2000    # Increased from 1000 to reduce buffer reallocations

# Concurrency Tuning - Optimized for lower latency
PROCESSOR_CHANNEL_SIZE=2000  # Increased from 1000 for better buffering
WORKER_QUEUE_SIZE=15000      # Increased from 10000 for better throughput
BATCH_PROCESSING_SIZE=50     # Reduced from 100 to match Kafka batch size

# Aggregate Publishing Configuration
AGGREGATE_PUBLISH_INTERVAL=30s  # How often to publish aggregate data to Kafka